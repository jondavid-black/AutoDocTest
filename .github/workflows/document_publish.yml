# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Publish AutoDoc files

on:
  workflow_dispatch:
    inputs:
      release_semver:
        description: 'The Semantic Version number of the release'
        required: true

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 svglib m2r rst2pdf Pillow pyenchant
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Check for spelling errors in _docs (update src/dict.txt if needed)
      run: |
        python ./src/spellchecker.py ./_docs/*/*.md    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Generate combined documents in markdown and restructuredtext
      run: |
        python ./src/assembledocuments.py ./_docs ./build
    - name: Generage PDF for each document 
      run: |
        for f in ./build/*.rst; do
           rst2pdf $f
        done
    - name: Zip documents
      uses: papeloto/action-zip@v1
      with:
        files: ./build/ 
        dest: ./build/documents.zip
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.release_semver }}
        release_name: Release ${{ github.event.inputs.release_semver }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./build/documents.zip
        asset_name: documents.zip
        asset_content_type: application/zip
